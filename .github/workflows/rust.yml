name: Rust

on: [push]

jobs:
  build:
    env: 
      CC: $NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/clang
      AR: $NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar
      NDK_HOME: $GITHUB_WORKSPACE/android-ndk-r20

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust-channel: ['stable', 'nightly']
        rust-target: ['arm-linux-androideabi', 'armv7-linux-androideabi', 'aarch64-linux-android', 'i686-linux-android', 'x86_64-linux-android']

    steps:
    - uses: actions/checkout@v1
    - name: Installing Rust ${{ matrix.rust-channel }} w/ ${{ matrix.rust-target }}
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust-channel }}
        target: ${{ matrix.rust-target }}
        override: true

    - name: Cache NDK
      uses: actions/cache@v1
      with:
        path: $GITHUB_WORKSPACE/android-ndk-r20
        key: ${{ hashFiles('**/CHANGELOG.md') }}

    - name: Download NDK
      run: |
        curl -LO https://dl.google.com/android/repository/android-ndk-r20-linux-x86_64.zip
        unzip android-ndk-r20-linux-x86_64.zip -d $GITHUB_WORKSPACE

    - name: Check formating
      run: cargo fmt --all -- --check
    - name: Check docs
      run: CC=cc AR=ar cargo test --manifest-path android-ndk/Cargo.toml --doc --target=x86_64-unknown-linux-gnu --features rustdoc
    - name: Run tests
      run: cargo test --package android-ndk-sys --lib --target=x86_64-unknown-linux-gnu
    - name: Check compiling on target ${{ matrix.rust-target }}
      run: cargo check --package android-ndk --target=${{ matrix.rust-target }}
